map-domain-noauth:
  needs: deploy
  name: Map Domain - no auth
  runs-on: ubuntu-latest
  defaults:
    run:
      working-directory: public-skylounge-library/terraform/gcp/cloud-run/domain-mapping/noauth
  steps:
    - name: Checkout terraform
      uses: actions/checkout@v3
      with:
        repository: sky-lounge/public-skylounge-library
        ref: main
        path: public-skylounge-library
    - uses: hashicorp/setup-terraform@v2
    - id: "auth"
      name: "Authenticate to Google Cloud"
      uses: "google-github-actions/auth@v0"
      with:
        credentials_json: "${{ secrets.GOOGLE_CREDENTIALS_DEV }}"
    - name: Prepare Backend Config
      run: |
        cat << EOF > config.gcs.tfbackend
        bucket = "$TF_STATE_BUCKET"
        prefix = "${REPO_NAME}-development"
        EOF
      env:
        TF_STATE_BUCKET: ((tf_state_bucket))
        REPO_NAME: ${{ github.event.repository.name }}
    - name: Terraform Init
      run: terraform init -backend-config=config.gcs.tfbackend
    - name: Prepare Terraform Vars File
      run: |
        cat << EOF > terraform.tfvars
        gcp_project = "$GCP_PROJECT"
        dns_zone_name = "$DNS_ZONE_NAME"
        cloud_run_domain = "$CLOUD_RUN_DOMAIN"
        cloud_run_location = "$CLOUD_RUN_LOCATION"
        cloud_run_service_name = "$CLOUD_RUN_SERVICE_NAME" 
        cloud_run_invoker = "$CLOUD_RUN_INVOKER"     
        EOF
      env:
        GCP_PROJECT: ((gcp_project))
        DNS_ZONE_NAME: ((dns_zone_name))
        CLOUD_RUN_DOMAIN: ((cloud_run_domain))
        CLOUD_RUN_LOCATION: ((cloud_run_location))
        CLOUD_RUN_SERVICE_NAME: ${{ github.event.repository.name }}-development
        CLOUD_RUN_INVOKER: ((cloud_run_invoker))
    - name: Terraform Apply
      run: |
        terraform apply -auto-approve